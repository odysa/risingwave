shared:
  - commit_message_template: &commit_message_template |
      {{title}} (#{{number}})
      
      {{body | get_section("## What's changed and what's your intention?")}}
      {% for user in approved_reviews_by %}
      Approved-By: {{user}}
      {%- endfor %}
      {%- set commit_authors = commits | rejectattr("author", "eq", "mergify[bot]") | unique(false, "email_author")| list -%}
      {% if commit_authors | length > 1 %}
      {% for commit in commit_authors %}
      Co-Authored-By: {{ commit.author }} <{{ commit.email_author }}>
      {%- endfor %}
      {%- endif %}

queue_rules:
  - name: default
    conditions:
      - "check-success=buildkite/pull-request"
      - "check-failure!=buildkite/docker"
      - "check-success=task-list-completed"
      - "label=mergify/can-merge"

pull_request_rules:
  - name: Automatic merge on approval (high priority)
    conditions:
      - "base=main"
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - "check-success=buildkite/pull-request"
      - "check-failure!=buildkite/docker"
      - "check-success=task-list-completed"
      - "label=mergify/can-merge"
      - "label=mergify/high-priority"
    actions:
      queue:
        name: default
        method: squash
        priority: high
        commit_message_template: *commit_message_template

  - name: Automatic merge on approval
    conditions:
      - "base=main"
      - "#approved-reviews-by>=1"
      - "#changes-requested-reviews-by=0"
      - "check-success=buildkite/pull-request"
      - "check-failure!=buildkite/docker"
      - "check-success=task-list-completed"
      - "label=mergify/can-merge"
    actions:
      queue:
        name: default
        method: squash
        priority: medium
        commit_message_template: *commit_message_template

  - name: Notify author on queue failure
    conditions:
      - "check-failure=Queue: Embarked in merge train"
    actions:
      comment:
        message: >
          Hey @{{ author }}, this pull request failed to merge and has been
          dequeued from the merge train.  If you believe your PR failed in
          the merge train because of a flaky test, requeue it by clicking
          "Update branch" or pushing an empty commit with 
          `git commit --allow-empty -m "rerun" && git push`.
